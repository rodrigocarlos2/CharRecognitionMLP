clear; clc;close all;

Entrada = [
% 0
0 0 1 
];

Desejado = sin(Entrada);

disp (Entrada)
disp (Desejado)

In = 1;

H = 18;

Out = 1;

eta = 0.0004;

Epocas = 14000;

k = 1; 

grafico_erro = [];

%Whi = rand(H,In) - 0.5;
%Woh = rand(Out,H) - 0.5;
    
load pesos9 Woh Whi

for In=0:Epocas
    
    net_h = Whi*Entrada;
     
    Output_h = logsig(net_h);
             
    net_o = Woh*Output_h;
  
    Output = k*net_o;
         
    Erro = Desejado - Output;
    
            df = k*ones(size(net_o));
                             
            delta_Woh = eta*(Erro.*df)*Output_h';

            Erro_r = Woh'*(Erro.*df);
        
            df = logsig(net_h)-(logsig(net_h).^2);
            
            %Cálculo do delta Whi.
            delta_Whi = eta*(Erro_r.*df)*Entrada';
    
            %Cálculo dos novos pesos.
            Whi = Whi+delta_Whi;
            Woh = Woh+delta_Woh;
        
            %Cálculo do Erro Quadrático Médio.
            emq = sqrt(sum(Erro.^2))/size(Erro,2);
            grafico_erro = [grafico_erro emq];
        
end

%Imprime o gráfico referente ao seno esperado e o seno obtido.
figure(1);
plot(Entrada, Output,'g', Entrada, Desejado,'black');
hold on;
grid on;
title('Seno esperado (Preto) e o Seno obtido (Verde)');

%Imprime o gráfico referente ao Erro Quadrático Médio.
figure(2);
plot(grafico_erro, 'r');
hold on;
grid on;
disp(In);
xlabel('Épocas');
ylabel('Erro (EQM)');
legend('Erro Quadrático Médio');

%Grava os pesos atuais para posteriores operações.
save pesos9 Woh Whi

%Grava pesos para serem utilizados no teste de generalização
save pesoteste Woh Whi